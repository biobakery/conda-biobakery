{% set name = "kneaddata" %}
{% set version = "0.7.2" %}
{% set hash_type = "sha256" %}
{% set hash_value = "9415104fa97982e1b547e97a8a297a57031d37b4c5d9e2b2f269023244a8caed" %}

package:
  name: '{{ name|lower }}'
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.tar.gz'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  entry_points:
    - kneaddata = kneaddata.knead_data:main
    - kneaddata_bowtie2_discordant_pairs = kneaddata.bowtie2_discordant_pairs:main
    - kneaddata_database = kneaddata.download_db:main
    - kneaddata_build_database = kneaddata.generate_db:main
    - kneaddata_read_count_table = kneaddata.read_count_table:main
    - kneaddata_test = kneaddata.tests.kneaddata_test:main
  script: python setup.py install --single-version-externally-managed --record=record.txt

requirements:
  build:
    - python
    - setuptools
    - bowtie2 >=2.2
  run:
    - python
    - trf
    - bowtie2 >=2.2
    - fastqc
    - samtools
    - java-jdk

test:
  imports:
    - kneaddata
    - kneaddata.db_preprocessing
    - kneaddata.tests
  commands:
    - kneaddata --help
    - kneaddata_bowtie2_discordant_pairs --help
    - kneaddata_database --help
    - kneaddata_build_database --help
    - kneaddata_read_count_table --help
    - kneaddata_test --help

about:
  home: http://huttenhower.sph.harvard.edu/kneaddata
  license: MIT
  license_family: MIT
  summary: KneadData is a tool designed to perform quality control on metagenomic sequencing data, especially data from microbiome experiments.
  description: KneadData is a tool designed to perform quality control on metagenomic sequencing data, especially data from microbiome experiments. In these experiments, samples are typically taken from a host in hopes of learning something about the microbial community on the host. However, metagenomic sequencing data from such experiments will often contain a high ratio of host to bacterial reads. This tool aims to perform principled in silico separation of bacterial reads from these "contaminant" reads, be they from the host, from bacterial 16S sequences, or other user-defined sources.
  doc_url: http://huttenhower.sph.harvard.edu/kneaddata

extra:
  recipe-maintainers: kneaddata-users@googlegroups.com
